fun do_fib(bool recursive)
    integer n;
    string message;
    ?. '\n(5) FIBONACCI';
    % n '\nInserisci n: ';
    ?. '';
    message := 'Il numero di Fibonacci in posizione ' & n & ' vale ';
    if recursive then
        message := message & recursive_fib(n);
    else
        message := message & iterative_fib(n);
    end if;
    ?. message;
end fun;

fun iterative_fib(integer n): integer
    if n = 1 then
        return 0;
    end if;
    if n = 2 then
        return 1;
    end if;
    if n > 2 then
        integer i := 3, res := 1, prev := 0;
        while i <= n loop
            integer tmp := res;
            res := res + prev;
            prev := tmp;
            i := i + 1;
        end loop;
        return res;
    end if;
    return -1;
end fun;

fun recursive_fib(integer n): integer
    if n = 1 then
        return 0;
    end if;
    if n = 2 then
        return 1;
    end if;
    return recursive_fib(n - 1) + recursive_fib(n - 2);
end fun;

main
end main;